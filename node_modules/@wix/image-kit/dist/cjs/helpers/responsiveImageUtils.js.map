{"version":3,"names":["_max","require","alignTypes","CENTER","TOP","TOP_LEFT","TOP_RIGHT","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","RIGHT","getCropDataWithAlign","targetAspectRatio","originalAspectRatio","originalHeight","originalWidth","targetHeight","lowerWidth","bpWidth","alignType","width","height","Math","round","y","x","includes","WIDTHS","getSources","widthProportion","targetWidth","uri","quality","name","hasAnimation","upscaleMethod","focalPoint","crop","encoding","siteMargin","displayMode","hasOriginalSizeDisplayMode","map","index","isLowestBreakpoint","getWidth","w","lowerBpWidth","currentBpWidth","useManualCrop","manualCrop","srcset","fallbackSrc","css","getResponsiveImageProps","sizes","media","imgStyle","img","imageProps","allowAnimatedTransform","_srcset$dpr","src","getData","id","alignment","useSrcset","srcsetWithPrefix","dpr","s","test","STATIC_MEDIA_URL","srcsetString","join","sources","filter","Boolean","reverse","exports"],"sources":["../../../src/helpers/responsiveImageUtils.ts"],"sourcesContent":["import { getData, STATIC_MEDIA_URL } from '../api/max';\nimport type { AlignType, Encoding, UpscaleMethod } from '../types';\n\nconst alignTypes = {\n  CENTER: 'center',\n  TOP: 'top',\n  TOP_LEFT: 'top_left',\n  TOP_RIGHT: 'top_right',\n  BOTTOM: 'bottom',\n  BOTTOM_LEFT: 'bottom_left',\n  BOTTOM_RIGHT: 'bottom_right',\n  LEFT: 'left',\n  RIGHT: 'right',\n} as const;\n\ntype AlignTypeKey = keyof typeof alignTypes;\ntype AlignTypeValue = (typeof alignTypes)[AlignTypeKey];\n\nconst getCropDataWithAlign = (\n  targetAspectRatio: number,\n  originalAspectRatio: number,\n  originalHeight: number,\n  originalWidth: number,\n  targetHeight: number,\n  lowerWidth: number,\n  bpWidth: number,\n  alignType: AlignTypeValue = alignTypes.CENTER,\n) => {\n  if (targetAspectRatio > originalAspectRatio) {\n    // Image needs vertical cropping\n    const width = originalWidth;\n    const height = Math.round(originalWidth / (lowerWidth / targetHeight));\n    let y = Math.round(originalHeight / 2 - height / 2);\n    const x = 0;\n\n    if (alignType.includes('top')) {\n      y = 0;\n    } else if (alignType.includes('bottom')) {\n      y = originalHeight - height;\n    }\n\n    return { width, height, x, y };\n  } else {\n    // Image needs horizontal cropping\n    const width = Math.round(originalHeight / (targetHeight / bpWidth));\n    const height = originalHeight;\n\n    let x = Math.round(originalWidth / 2 - width / 2);\n    const y = 0;\n\n    if (alignType.includes('left')) {\n      x = 0;\n    } else if (alignType.includes('right')) {\n      x = originalWidth - width;\n    }\n\n    return { width, height, x, y };\n  }\n};\n\nconst WIDTHS = [1920, 1536, 1366, 1280, 980];\n\ntype Sources = {\n  srcset: string | undefined;\n  sizes: string;\n  media: string;\n  fallbackSrc: string;\n  imgStyle: Record<string, any>;\n};\n\nconst getSources = (\n  widthProportion: number,\n  originalWidth: number,\n  originalHeight: number,\n  targetHeight: number,\n  targetWidth: number,\n  uri: string,\n  quality: any,\n  name?: string,\n  alignType?: AlignType,\n  hasAnimation?: boolean,\n  upscaleMethod?: UpscaleMethod,\n  focalPoint?: any,\n  crop?: any,\n  encoding?: Encoding,\n  siteMargin?: number,\n  displayMode?: string,\n): Sources[] => {\n  const hasOriginalSizeDisplayMode = displayMode === 'original_size';\n  const originalAspectRatio = originalWidth / originalHeight;\n\n  return WIDTHS.map((width, index) => {\n    const isLowestBreakpoint = width === 980;\n\n    const getWidth = (w: number) => {\n      if (isLowestBreakpoint) {\n        return targetWidth;\n      }\n      return (w - 2 * (siteMargin || 0)) * (widthProportion / 100);\n    };\n\n    const lowerBpWidth = getWidth(WIDTHS[index + 1]);\n    const currentBpWidth = getWidth(width);\n\n    const targetAspectRatio = lowerBpWidth / targetHeight;\n    const useManualCrop = !(hasOriginalSizeDisplayMode || isLowestBreakpoint);\n\n    const manualCrop =\n      useManualCrop &&\n      getCropDataWithAlign(\n        targetAspectRatio,\n        originalAspectRatio,\n        originalHeight,\n        originalWidth,\n        targetHeight,\n        lowerBpWidth,\n        currentBpWidth,\n        alignType,\n      );\n\n    const { srcset, fallbackSrc, css } = getResponsiveImageProps(\n      {\n        displayMode: hasOriginalSizeDisplayMode\n          ? 'original_size'\n          : isLowestBreakpoint\n          ? 'fill'\n          : 'fit',\n        uri,\n        width: originalWidth,\n        height: originalHeight,\n        crop: crop || manualCrop,\n        name,\n        focalPoint,\n        alignType,\n        quality,\n        upscaleMethod,\n        hasAnimation,\n        encoding,\n      },\n      currentBpWidth,\n      targetHeight,\n    );\n\n    return {\n      srcset,\n      sizes: isLowestBreakpoint\n        ? `${widthProportion}vw`\n        : `${currentBpWidth}px`,\n      media: `(max-width: ${width}px)`,\n      fallbackSrc,\n      imgStyle: css?.img,\n    };\n  });\n};\n\nexport const getResponsiveImageProps = (\n  imageProps: Record<string, any>,\n  targetWidth: number,\n  targetHeight: number,\n) => {\n  const {\n    displayMode,\n    uri,\n    width,\n    height,\n    name,\n    crop,\n    focalPoint,\n    alignType,\n    quality,\n    upscaleMethod,\n    hasAnimation,\n    allowAnimatedTransform,\n    encoding,\n    siteMargin,\n    widthProportion,\n  } = imageProps;\n\n  if (!widthProportion) {\n    const {\n      srcset,\n      css,\n      uri: src,\n    } = getData(\n      displayMode,\n      { id: uri as string, width, height, name, crop, focalPoint },\n      {\n        width: targetWidth as number,\n        height: targetHeight as number,\n        alignment: alignType,\n      },\n      {\n        focalPoint,\n        name,\n        quality: quality?.quality,\n        upscaleMethod,\n        hasAnimation,\n        allowAnimatedTransform,\n        useSrcset: true,\n        encoding,\n      },\n    );\n\n    const srcsetWithPrefix = srcset?.dpr?.map((s: string) =>\n      /^[a-z]+:/.test(s) ? s : `${STATIC_MEDIA_URL}${s}`,\n    );\n\n    const fallbackSrc = `${STATIC_MEDIA_URL}${src}`;\n    const srcsetString = srcsetWithPrefix?.join(', ');\n\n    return {\n      fallbackSrc,\n      srcset: srcsetString,\n      css,\n    };\n  } else {\n    const sources = getSources(\n      widthProportion,\n      width,\n      height,\n      targetHeight,\n      targetWidth,\n      uri,\n      quality,\n      name,\n      alignType,\n      hasAnimation,\n      upscaleMethod,\n      focalPoint,\n      crop,\n      encoding,\n      siteMargin,\n      displayMode,\n    )\n      .filter(Boolean)\n      .reverse();\n\n    return {\n      fallbackSrc: sources[0].fallbackSrc,\n      sources,\n      css: sources[0].imgStyle,\n    };\n  }\n};\n"],"mappings":"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","ignoreList":[]}