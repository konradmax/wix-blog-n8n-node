"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteCategory = exports.queryCategories = exports.listCategories = exports.getCategoryBySlug = exports.getCategory = exports.updateCategory = exports.createCategory = void 0;
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
const float_1 = require("@wix/sdk-runtime/transformations/float");
const float_2 = require("@wix/sdk-runtime/transformations/float");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const field_mask_1 = require("@wix/sdk-runtime/transformations/field-mask");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixpressNpmCommunitiesPlatformizedBlogV3CategoryServiceUrl(opts) {
    const domainToMappings = {
        'manage._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v3/bulk/category',
                destPath: '/v3/bulk/category',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v3/bulk/categories',
                destPath: '/v3/bulk/categories',
            },
        ],
        '*.pub.wix-code.com': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'bo._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'wixbo.ai': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'wix-bo.com': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'editor.wixapps.net': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'social-blog._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        _: [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'apps._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'www._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/blog/v3/categories',
                destPath: '/v3/categories',
            },
            {
                srcPath: '/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/communities-blog-node-api/v3/categories',
                destPath: '/v3/categories',
            },
        ],
        'api._api_base_domain_': [
            {
                srcPath: '/category-service-api-proxy',
                destPath: '',
            },
        ],
    };
    return (0, rest_modules_2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_blog_categories';
/** Creates a category. */
function createCategory(payload) {
    function __createCategory({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'category.updatedDate' },
                    { path: 'category.coverImage.urlExpirationDate' },
                ],
            },
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'category.coverImage.focalPoint.x' },
                    { path: 'category.coverImage.focalPoint.y' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.blog.v3.category',
            method: 'POST',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.CategoryService.CreateCategory',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3CategoryServiceUrl({ protoPath: '/v3/categories', data: serializedData, host }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'category.updatedDate' },
                        { path: 'category.coverImage.urlExpirationDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'category.coverImage.focalPoint.x' },
                        { path: 'category.coverImage.focalPoint.y' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createCategory;
}
exports.createCategory = createCategory;
/** Updates a category. */
function updateCategory(payload) {
    function __updateCategory({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: field_mask_1.transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'category.updatedDate' },
                    { path: 'category.coverImage.urlExpirationDate' },
                ],
            },
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'category.coverImage.focalPoint.x' },
                    { path: 'category.coverImage.focalPoint.y' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.blog.v3.category',
            method: 'PATCH',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.CategoryService.UpdateCategory',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3CategoryServiceUrl({
                protoPath: '/v3/categories/{category.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'category.updatedDate' },
                        { path: 'category.coverImage.urlExpirationDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'category.coverImage.focalPoint.x' },
                        { path: 'category.coverImage.focalPoint.y' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateCategory;
}
exports.updateCategory = updateCategory;
/** Gets a category with the specified ID. */
function getCategory(payload) {
    function __getCategory({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.category',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.CategoryService.GetCategory',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3CategoryServiceUrl({ protoPath: '/v3/categories/{categoryId}', data: payload, host }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'category.updatedDate' },
                        { path: 'category.coverImage.urlExpirationDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'category.coverImage.focalPoint.x' },
                        { path: 'category.coverImage.focalPoint.y' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getCategory;
}
exports.getCategory = getCategory;
/**
 * Gets a category with the specified slug.
 *
 * The slug is at the end of the URL of a specific category.
 * For example, if a category's URL is `https://example.com/blog/categories/famous-cats`, the slug is `famous-cats`.
 * The slug is a case-sensitive string that is derived from the category's label, unless specified otherwise.
 */
function getCategoryBySlug(payload) {
    function __getCategoryBySlug({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.category',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.CategoryService.GetCategoryBySlug',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3CategoryServiceUrl({ protoPath: '/v3/categories/slugs/{slug}', data: payload, host }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'category.updatedDate' },
                        { path: 'category.coverImage.urlExpirationDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'category.coverImage.focalPoint.x' },
                        { path: 'category.coverImage.focalPoint.y' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getCategoryBySlug;
}
exports.getCategoryBySlug = getCategoryBySlug;
/**
 * Retrieves a list of up to 100 categories per request.
 *
 * If you pass a language filter to the method, it returns a list of up to 100 categories in the requested language.
 *
 * The categoies are displayed in order of their `displayPosition`, starting with `0`. The `displayPosition` is the position in which the categories
 * are displayed in the Category Menu page. By default, categories get added to the bottom of the Category Menu page with a `displayPosition` of `-1`.
 *
 * List Categories runs with these defaults, which you can override:
 * - `paging.limit` is `50`.
 * - `paging.offset` is `0`.
 *
 * List Categories is sorted by `displayPosition` in descending order. This cannot be overridden.
 */
function listCategories(payload) {
    function __listCategories({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.category',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.CategoryService.ListCategories',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3CategoryServiceUrl({ protoPath: '/v3/categories', data: payload, host }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'categories.updatedDate' },
                        { path: 'categories.coverImage.urlExpirationDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'categories.coverImage.focalPoint.x' },
                        { path: 'categories.coverImage.focalPoint.y' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __listCategories;
}
exports.listCategories = listCategories;
/**
 * Creates a query to retrieve a list of categories.
 *
 *
 * The Query Categories method builds a query to retrieve a list of up to 100 categories per language, and returns a [`CategoriesQueryBuilder`](https://dev.wix.com/docs/sdk/backend-modules/blog/categories/categories-query-builder/ascending) object.
 *
 * The response contains the query definition, which is typically used to run the query using the [`find()`](https://dev.wix.com/docs/sdk/backend-modules/blog/categories/categories-query-builder/find) method.
 *
 * You can refine the query by chaining `CategoriesQueryBuilder` methods to the query. `CategoriesQueryBuilder` methods enable you to sort, filter, and control the results that Query Categories returns. Any methods chained to the Query Categories method are applied in the order that they are called.
 *
 * Query Categories runs with these `CategoriesQueryBuilder` defaults, which you can override.
 * - [`limit(100)`](https://dev.wix.com/docs/sdk/backend-modules/blog/categories/categories-query-builder/limit)
 * - [`ascending(displayPosition)`](https://dev.wix.com/docs/sdk/backend-modules/blog/categories/categories-query-builder/ascending)
 *
 * The following `CategoriesQueryBuilder` methods are supported for Query Categories. For a full description of the `Categories` object, see the response for the [`items`](https://dev.wix.com/docs/sdk/backend-modules/blog/categories/categories-query-result/items) property in [`CategoriesQueryResult`](https://www.wix.com/velo/reference/wix-blog-backend/categories/categoriesqueryresult).
 */
function queryCategories(payload) {
    function __queryCategories({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.category',
            method: 'POST',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.CategoryService.QueryCategories',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3CategoryServiceUrl({ protoPath: '/v3/categories/query', data: payload, host }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'categories.updatedDate' },
                        { path: 'categories.coverImage.urlExpirationDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'categories.coverImage.focalPoint.x' },
                        { path: 'categories.coverImage.focalPoint.y' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __queryCategories;
}
exports.queryCategories = queryCategories;
/** Deletes a category. */
function deleteCategory(payload) {
    function __deleteCategory({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.category',
            method: 'DELETE',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.CategoryService.DeleteCategory',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3CategoryServiceUrl({ protoPath: '/v3/categories/{categoryId}', data: payload, host }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
        };
        return metadata;
    }
    return __deleteCategory;
}
exports.deleteCategory = deleteCategory;
//# sourceMappingURL=blog-v3-category-categories.http.js.map