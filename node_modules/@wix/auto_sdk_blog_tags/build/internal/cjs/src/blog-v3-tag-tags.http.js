"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteTag = exports.queryTags = exports.getTagBySlug = exports.getTag = exports.getTagByLabel = exports.createTag = void 0;
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl(opts) {
    const domainToMappings = {
        'api._api_base_domain_': [
            {
                srcPath: '/communities-blog-node-api',
                destPath: '',
            },
        ],
        'www._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v2/stats',
                destPath: '/v2/stats',
            },
        ],
        'apps._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v2/stats',
                destPath: '/v2/stats',
            },
        ],
        _: [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/blogs/this',
                destPath: '/_api/blogs/this',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/categories',
                destPath: '/_api/categories',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/site-properties',
                destPath: '/_api/site-properties',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/posts/content',
                destPath: '/_api/posts/content',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v2/stats',
                destPath: '/v2/stats',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        '*.pub.wix-code.com': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'bo._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'wixbo.ai': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'wix-bo.com': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'social-blog._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'editor.wixapps.net': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'dev._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/blog/v2',
                destPath: '/v2',
            },
            {
                srcPath: '/blog/v3',
                destPath: '/v3',
            },
            {
                srcPath: '/v2/stats',
                destPath: '/v2/stats',
            },
            {
                srcPath: '/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/blog/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/blog/v2/stats',
                destPath: '/v2/stats',
            },
            {
                srcPath: '/_api/v3/posts',
                destPath: '/v3/posts',
            },
        ],
    };
    return (0, rest_modules_2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_blog_tags';
/** Creates a new tag with the provided label if a tag with the same label doesn't already exist. */
function createTag(payload) {
    function __createTag({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.tag',
            method: 'POST',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.TagService.CreateTag',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
                protoPath: '/v3/tags',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_1.transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'tag.createdDate' }, { path: 'tag.updatedDate' }],
                },
            ]),
        };
        return metadata;
    }
    return __createTag;
}
exports.createTag = createTag;
/**
 * Gets a tag by the specified label.
 *
 * The `getTagByLabel()` function returns a Promise that resolves to a tag whose label matches the specified label.
 */
function getTagByLabel(payload) {
    function __getTagByLabel({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.tag',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.TagService.GetTagByLabel',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
                protoPath: '/v3/tags/labels/{label}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_1.transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'tag.createdDate' }, { path: 'tag.updatedDate' }],
                },
            ]),
        };
        return metadata;
    }
    return __getTagByLabel;
}
exports.getTagByLabel = getTagByLabel;
/**
 * Gets a tag by the specified ID.
 *
 *
 * The `getTag()` function returns a Promise that resolves to a tag whose ID matches the specified ID.
 */
function getTag(payload) {
    function __getTag({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.tag',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.TagService.GetTag',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
                protoPath: '/v3/tags/{tagId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_1.transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'tag.createdDate' }, { path: 'tag.updatedDate' }],
                },
            ]),
        };
        return metadata;
    }
    return __getTag;
}
exports.getTag = getTag;
/**
 * Gets a tag by the specified slug.
 *
 *
 * The `getTagBySlug()` function returns a Promise that resolves to a tag whose slug matches the specified slug.
 *
 * The `slug` is the end of a tag's URL that refers to a specific tag. For example, if a tag's URL is `https://example.com/blog/tag/{my-tag-slug}`, the slug is `my-tag-slug`. The slug is case-sensitive and derived from the tag's `label`.
 */
function getTagBySlug(payload) {
    function __getTagBySlug({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.tag',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.TagService.GetTagBySlug',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
                protoPath: '/v3/tags/slugs/{slug}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_1.transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'tag.createdDate' }, { path: 'tag.updatedDate' }],
                },
            ]),
        };
        return metadata;
    }
    return __getTagBySlug;
}
exports.getTagBySlug = getTagBySlug;
/**
 * Creates a query to retrieve a list of tags.
 *
 *
 * The `queryTags()` function builds a query to retrieve a list of up to 4,000 tags per language, and returns a [`TagsQueryBuilder`](https://www.wix.com/velo/reference/wix-blog-backend/tags/tagsquerybuilder) object.
 *
 * The returned object contains the query definition, which is typically used to run the query using the [`find()`](https://www.wix.com/velo/reference/wix-blog-backend/tags/tagsquerybuilder/find) function.
 *
 * You can refine the query by chaining `TagsQueryBuilder` functions onto the query. `TagsQueryBuilder` functions enable you to sort, filter, and control the results that `queryTags()` returns.
 *
 * `queryTags()` runs with these `TagsQueryBuilder` defaults that can be overridden:
 * - [`limit(50)`](https://www.wix.com/velo/reference/wix-blog-backend/tags/tagsquerybuilder/limit)
 * - [`ascending('_id')`](https://www.wix.com/velo/reference/wix-blog-backend/tags/tagsquerybuilder/ascending)
 *
 * The following `TagQueryBuilder` functions are supported for `queryTags()`. For a full description of the Tags object, see the object returned for the [`items`](https://www.wix.com/velo/reference/wix-blog-backend/tags/tagsqueryresult/items) property in [`TagsQueryResult`](https://www.wix.com/velo/reference/wix-blog-backend/tags/tagsqueryresult).
 */
function queryTags(payload) {
    function __queryTags({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.tag',
            method: 'POST',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.TagService.QueryTags',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
                protoPath: '/v3/tags/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_1.transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'tags.createdDate' }, { path: 'tags.updatedDate' }],
                },
            ]),
        };
        return metadata;
    }
    return __queryTags;
}
exports.queryTags = queryTags;
/** Deletes a tag. Deleting a tag removes that tag from all blog posts that contain it. */
function deleteTag(payload) {
    function __deleteTag({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.tag',
            method: 'DELETE',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.TagService.DeleteTag',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
                protoPath: '/v3/tags/{tagId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
        };
        return metadata;
    }
    return __deleteTag;
}
exports.deleteTag = deleteTag;
//# sourceMappingURL=blog-v3-tag-tags.http.js.map