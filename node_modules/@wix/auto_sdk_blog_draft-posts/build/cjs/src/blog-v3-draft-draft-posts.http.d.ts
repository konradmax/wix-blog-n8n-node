import { RequestOptionsFactory } from '@wix/sdk-types';
/**
 * Creates a draft post.
 *
 * The draft post's `memberId` is required for third-party apps.
 */
export declare function createDraftPost(payload: object): RequestOptionsFactory<any>;
/** Creates multiple draft posts. */
export declare function bulkCreateDraftPosts(payload: object): RequestOptionsFactory<any>;
/** Updates multiple draft posts. */
export declare function bulkUpdateDraftPosts(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves a list of up to 100 deleted draft posts.
 *
 * List Deleted Draft Posts runs with these defaults, which you can override:
 * - `editedDate` is sorted in descending order. In this case,`editedDate` implies the date the post was deleted.
 * - `paging.limit` is `50`.
 * - `paging.offset` is `0`.
 */
export declare function listDeletedDraftPosts(payload: object): RequestOptionsFactory<any>;
/**
 * Gets a draft post by the provided ID.
 *
 * Uses the provided `draftPostId` to retrieve a draft post.
 */
export declare function getDraftPost(payload: object): RequestOptionsFactory<any>;
/** Updates a draft post. */
export declare function updateDraftPost(payload: object): RequestOptionsFactory<any>;
/**
 * Moves a draft post with the provided ID to the trash bin.
 * A published post can also be deleted by its provided `draftPostId`.
 *
 * The optional `permanent` field enables you to delete a post permanently, bypassing the trash bin. When a draft post is deleted this way, it can't be restored.
 */
export declare function deleteDraftPost(payload: object): RequestOptionsFactory<any>;
/**
 * Permanently deletes a draft post by the provided ID from the trash bin.
 *
 * Uses the provided `draftPostId` to permanently delete a draft post from the trash bin. This action is permanent and cannot be reversed.
 */
export declare function removeFromTrashBin(payload: object): RequestOptionsFactory<any>;
/** Deletes multiple draft posts. */
export declare function bulkDeleteDraftPosts(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves a list of up to 100 draft posts per request.
 *
 * List Draft Posts runs with these defaults, which you can override:
 * - `editedDate` is sorted in descending order.
 * - `paging.limit` is `50`.
 * - `paging.offset` is `0`.
 */
export declare function listDraftPosts(payload: object): RequestOptionsFactory<any>;
/**
 * Gets a deleted draft post from the trash bin by the provided ID.
 *
 * Uses the provided `draftPostId` to retrieve a previously deleted draft post from the trash bin.
 */
export declare function getDeletedDraftPost(payload: object): RequestOptionsFactory<any>;
/**
 * Restores a deleted draft post from the trash bin by the provided ID.
 *
 * Uses the `draftPostId` to restore a deleted draft post from the trash bin.
 */
export declare function restoreFromTrashBin(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves a list of up to 100 draft posts, given the provided paging, filtering, and sorting.
 *
 * Query Draft Posts runs with these defaults, which you can override:
 * - `editedDate` is sorted in `DESC` order.
 * - `paging.limit` is `50`.
 * - `paging.offset` is `0`.
 */
export declare function queryDraftPosts(payload: object): RequestOptionsFactory<any>;
/**
 * Publishes a specified draft post by ID. This creates a new post entity with the data from the draft post.
 *
 * If the specified draft post was already published, the published post will be updated with the latest values from the draft post entity.
 */
export declare function publishDraftPost(payload: object): RequestOptionsFactory<any>;
