export interface ImportStatus {
    /** Import Id. */
    id?: string;
    /** File name of wordpress xml file that is being imported. */
    fileName?: string;
    /** Status of the latest import. */
    status?: Status;
    /** Total amount of entities to be imported. */
    importAmount?: number;
    /** Amount of entities imported successfully. */
    alreadyImportedAmount?: number;
    /** Amount of entities processed. */
    processedAmount?: number;
    /** Url for the page that is being imported. */
    url?: string | null;
}
export declare enum Status {
    UNKNOWN = "UNKNOWN",
    READY_TO_IMPORT = "READY_TO_IMPORT",
    STARTED = "STARTED",
    FAILED = "FAILED",
    DONE = "DONE",
    PARSING_URL = "PARSING_URL",
    NOT_FOUND = "NOT_FOUND"
}
export interface StartImportRequest {
    /** Should publish the posts after import. */
    shouldPublish?: boolean | null;
}
export interface StartImportResponse {
}
export interface SubmitUrlForImportRequest {
    /** Url to wordpress xml file. */
    url: string;
    /** Domain of the site without www or https://. */
    siteDomain?: string | null;
}
export interface SubmitUrlForImportResponse {
}
export interface ValidateUrlForImportRequest {
    /** Url for wordpress site. */
    url: string | null;
}
export interface ValidateUrlForImportResponse {
    /** Number of posts. */
    totalPosts?: number | null;
    /** Blog title. */
    blogTitle?: string | null;
}
export interface DeleteNotImportedRequest {
}
export interface DeleteNotImportedResponse {
}
export interface GetImportStatusRequest {
}
export interface GetImportStatusResponse {
    /** Details of import progress. */
    importStatus?: ImportStatus;
}
export interface GetNotImportedPostsRequest {
}
export interface GetNotImportedPostsResponse {
    /** Failed entities. */
    notImportedPosts?: Post[];
}
export interface Post {
    /** The id of the post. */
    id?: string;
    /** Title of the post. */
    title?: string;
    /** Url to posts in wordpress. */
    url?: string;
}
interface ImportStatusNonNullableFields {
    id: string;
    fileName: string;
    status: Status;
    importAmount: number;
    alreadyImportedAmount: number;
    processedAmount: number;
}
export interface GetImportStatusResponseNonNullableFields {
    importStatus?: ImportStatusNonNullableFields;
}
interface PostNonNullableFields {
    id: string;
    title: string;
    url: string;
}
export interface GetNotImportedPostsResponseNonNullableFields {
    notImportedPosts: PostNonNullableFields[];
}
export {};
