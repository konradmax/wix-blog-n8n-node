import { getPost as publicGetPost, getPostBySlug as publicGetPostBySlug, listPosts as publicListPosts, queryPosts as publicQueryPosts, getPostMetrics as publicGetPostMetrics, queryPostCountStats as publicQueryPostCountStats, getTotalPosts as publicGetTotalPosts, } from './blog-v3-post-posts.public.js';
import { createRESTModule } from '@wix/sdk-runtime/rest-modules';
import { createEventModule } from '@wix/sdk-runtime/event-definition-modules';
import { onPostCreated as publicOnPostCreated } from './blog-v3-post-posts.public.js';
import { onPostDeleted as publicOnPostDeleted } from './blog-v3-post-posts.public.js';
import { onPostLiked as publicOnPostLiked } from './blog-v3-post-posts.public.js';
import { onPostUnliked as publicOnPostUnliked } from './blog-v3-post-posts.public.js';
import { onPostUpdated as publicOnPostUpdated } from './blog-v3-post-posts.public.js';
export const getPost = /*#__PURE__*/ createRESTModule(publicGetPost);
export const getPostBySlug = /*#__PURE__*/ createRESTModule(publicGetPostBySlug);
export const listPosts = /*#__PURE__*/ createRESTModule(publicListPosts);
export const queryPosts = /*#__PURE__*/ createRESTModule(publicQueryPosts);
export const getPostMetrics = /*#__PURE__*/ createRESTModule(publicGetPostMetrics);
export const queryPostCountStats = /*#__PURE__*/ createRESTModule(publicQueryPostCountStats);
export const getTotalPosts = /*#__PURE__*/ createRESTModule(publicGetTotalPosts);
/**
 * Triggered when a post is created.
 */
export const onPostCreated = createEventModule(publicOnPostCreated);
/**
 * Triggered when a post is deleted.
 */
export const onPostDeleted = createEventModule(publicOnPostDeleted);
/**
 * Triggered when a post is liked.
 */
export const onPostLiked = createEventModule(publicOnPostLiked);
/**
 * Triggered when a post is unliked.
 */
export const onPostUnliked = createEventModule(publicOnPostUnliked);
/**
 * Triggered when a post is updated.
 */
export const onPostUpdated = createEventModule(publicOnPostUpdated);
export { NodeType, WidthType, PluginContainerDataAlignment, Type, Target, TextAlignment, LineStyle, Width, Alignment, ViewMode, LayoutType, Orientation, Crop, ThumbnailsAlignment, GIFType, Source, MapType, ViewRole, VoteRole, PollLayoutType, PollLayoutDirection, BackgroundType, DecorationType, FontType, AppType, InitialExpandedItems, Direction, VerticalAlignment, NullValue, ModerationStatusStatus, WebhookIdentityType, GetPostsSort, PostFieldField, GetPostTemplatesSort, Origin, Status, Field, SortOrder, QueryPublicationsCountStatsRequestOrder, Order, } from './blog-v3-post-posts.universal.js';
//# sourceMappingURL=blog-v3-post-posts.context.js.map