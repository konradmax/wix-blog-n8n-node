import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';
import { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';
import { transformRESTBytesToSDKBytes } from '@wix/sdk-runtime/transformations/bytes';
import { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveComWixpressNpmCommunitiesPlatformizedBlogBlogStatsServiceUrl(opts) {
    const domainToMappings = {
        'api._api_base_domain_': [
            {
                srcPath: '/communities-blog-node-api',
                destPath: '',
            },
        ],
        'www._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v2/stats',
                destPath: '/v2/stats',
            },
        ],
        'apps._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v2/stats',
                destPath: '/v2/stats',
            },
        ],
        _: [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/blogs/this',
                destPath: '/_api/blogs/this',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/categories',
                destPath: '/_api/categories',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/site-properties',
                destPath: '/_api/site-properties',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/posts/content',
                destPath: '/_api/posts/content',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v2/stats',
                destPath: '/v2/stats',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        '*.pub.wix-code.com': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'bo._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'wixbo.ai': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'wix-bo.com': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'social-blog._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'editor.wixapps.net': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'dev._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/blog/v2',
                destPath: '/v2',
            },
            {
                srcPath: '/blog/v3',
                destPath: '/v3',
            },
            {
                srcPath: '/v2/stats',
                destPath: '/v2/stats',
            },
            {
                srcPath: '/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/blog/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/blog/v2/stats',
                destPath: '/v2/stats',
            },
            {
                srcPath: '/_api/v3/posts',
                destPath: '/v3/posts',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
function resolveComWixpressNpmCommunitiesPlatformizedBlogV3PostServiceUrl(opts) {
    const domainToMappings = {
        'api._api_base_domain_': [
            {
                srcPath: '/communities-blog-node-api',
                destPath: '',
            },
        ],
        'www._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v2/stats',
                destPath: '/v2/stats',
            },
        ],
        'apps._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v2/stats',
                destPath: '/v2/stats',
            },
        ],
        _: [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/blogs/this',
                destPath: '/_api/blogs/this',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/categories',
                destPath: '/_api/categories',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/site-properties',
                destPath: '/_api/site-properties',
            },
            {
                srcPath: '/_api/communities-blog-node-api/_api/posts/content',
                destPath: '/_api/posts/content',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/_api/communities-blog-node-api/v2/stats',
                destPath: '/v2/stats',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        '*.pub.wix-code.com': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'bo._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'wixbo.ai': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'wix-bo.com': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'social-blog._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'editor.wixapps.net': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'dev._base_domain_': [
            {
                srcPath: '/_api/communities-blog-node-api',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/blog/v2',
                destPath: '/v2',
            },
            {
                srcPath: '/blog/v3',
                destPath: '/v3',
            },
            {
                srcPath: '/v2/stats',
                destPath: '/v2/stats',
            },
            {
                srcPath: '/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/blog/v3/posts',
                destPath: '/v3/posts',
            },
            {
                srcPath: '/blog/v2/stats',
                destPath: '/v2/stats',
            },
            {
                srcPath: '/_api/v3/posts',
                destPath: '/v3/posts',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_blog_posts';
/**
 * Gets a post by the specified ID.
 *
 *
 * The `getPost()` function returns a Promise that resolves to a post whose ID matches the given ID.
 *
 */
export function getPost(payload) {
    function __getPost({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.post',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.PostService.GetPost',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3PostServiceUrl({
                protoPath: '/v3/posts/{postId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'post.firstPublishedDate' },
                        { path: 'post.lastPublishedDate' },
                        { path: 'post.coverMedia.image.urlExpirationDate' },
                        { path: 'post.coverMedia.video.thumbnail.urlExpirationDate' },
                        { path: 'post.heroImage.urlExpirationDate' },
                        { path: 'post.richContent.metadata.createdTimestamp' },
                        { path: 'post.richContent.metadata.updatedTimestamp' },
                        { path: 'post.moderationDetails.submittedDate' },
                        { path: 'post.moderationDetails.moderationDate' },
                        { path: 'post.media.wixMedia.image.urlExpirationDate' },
                        { path: 'post.media.wixMedia.videoV2.urlExpirationDate' },
                        {
                            path: 'post.media.wixMedia.videoV2.resolutions.urlExpirationDate',
                        },
                        {
                            path: 'post.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',
                        },
                        { path: 'post.media.wixMedia.videoV2.posters.urlExpirationDate' },
                    ],
                },
                {
                    transformFn: transformRESTBytesToSDKBytes,
                    paths: [{ path: 'post.richContentCompressed' }],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'post.coverMedia.image.focalPoint.x' },
                        { path: 'post.coverMedia.image.focalPoint.y' },
                        { path: 'post.coverMedia.video.thumbnail.focalPoint.x' },
                        { path: 'post.coverMedia.video.thumbnail.focalPoint.y' },
                        { path: 'post.heroImage.focalPoint.x' },
                        { path: 'post.heroImage.focalPoint.y' },
                        { path: 'post.media.wixMedia.image.focalPoint.x' },
                        { path: 'post.media.wixMedia.image.focalPoint.y' },
                        {
                            path: 'post.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',
                        },
                        {
                            path: 'post.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',
                        },
                        { path: 'post.media.wixMedia.videoV2.posters.focalPoint.x' },
                        { path: 'post.media.wixMedia.videoV2.posters.focalPoint.y' },
                        { path: 'post.metrics.averageRating' },
                        {
                            path: 'post.richContent.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'post.richContent.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'post.richContent.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        { path: 'post.richContent.nodes.galleryData.options.item.ratio' },
                        { path: 'post.richContent.nodes.imageData.image.duration' },
                        { path: 'post.richContent.nodes.mapData.mapSettings.lat' },
                        { path: 'post.richContent.nodes.mapData.mapSettings.lng' },
                        { path: 'post.richContent.nodes.pollData.poll.image.duration' },
                        {
                            path: 'post.richContent.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'post.richContent.nodes.pollData.design.poll.background.image.duration',
                        },
                        { path: 'post.richContent.nodes.appEmbedData.image.duration' },
                        { path: 'post.richContent.nodes.videoData.video.duration' },
                        { path: 'post.richContent.nodes.videoData.thumbnail.duration' },
                        { path: 'post.richContent.nodes.audioData.audio.duration' },
                        { path: 'post.richContent.nodes.audioData.coverImage.duration' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getPost;
}
/**
 * Gets a post by the provided slug.
 *
 *
 * The `getPostBySlug()` function returns a Promise that resolves to a post whose slug matches the given slug.
 *
 * The `slug` is the end of a post's URL that refers to a specific post. For example, if a post's URL is `https:/example.com/blog/post/my-post-slug`, the slug is `my-post-slug`. The slug is case-sensitive, and is generally derived from the post title, unless specified otherwise.
 */
export function getPostBySlug(payload) {
    function __getPostBySlug({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.post',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.PostService.GetPostBySlug',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3PostServiceUrl({
                protoPath: '/v3/posts/slugs/{slug}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'post.firstPublishedDate' },
                        { path: 'post.lastPublishedDate' },
                        { path: 'post.coverMedia.image.urlExpirationDate' },
                        { path: 'post.coverMedia.video.thumbnail.urlExpirationDate' },
                        { path: 'post.heroImage.urlExpirationDate' },
                        { path: 'post.richContent.metadata.createdTimestamp' },
                        { path: 'post.richContent.metadata.updatedTimestamp' },
                        { path: 'post.moderationDetails.submittedDate' },
                        { path: 'post.moderationDetails.moderationDate' },
                        { path: 'post.media.wixMedia.image.urlExpirationDate' },
                        { path: 'post.media.wixMedia.videoV2.urlExpirationDate' },
                        {
                            path: 'post.media.wixMedia.videoV2.resolutions.urlExpirationDate',
                        },
                        {
                            path: 'post.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',
                        },
                        { path: 'post.media.wixMedia.videoV2.posters.urlExpirationDate' },
                    ],
                },
                {
                    transformFn: transformRESTBytesToSDKBytes,
                    paths: [{ path: 'post.richContentCompressed' }],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'post.coverMedia.image.focalPoint.x' },
                        { path: 'post.coverMedia.image.focalPoint.y' },
                        { path: 'post.coverMedia.video.thumbnail.focalPoint.x' },
                        { path: 'post.coverMedia.video.thumbnail.focalPoint.y' },
                        { path: 'post.heroImage.focalPoint.x' },
                        { path: 'post.heroImage.focalPoint.y' },
                        { path: 'post.media.wixMedia.image.focalPoint.x' },
                        { path: 'post.media.wixMedia.image.focalPoint.y' },
                        {
                            path: 'post.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',
                        },
                        {
                            path: 'post.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',
                        },
                        { path: 'post.media.wixMedia.videoV2.posters.focalPoint.x' },
                        { path: 'post.media.wixMedia.videoV2.posters.focalPoint.y' },
                        { path: 'post.metrics.averageRating' },
                        {
                            path: 'post.richContent.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'post.richContent.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'post.richContent.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        { path: 'post.richContent.nodes.galleryData.options.item.ratio' },
                        { path: 'post.richContent.nodes.imageData.image.duration' },
                        { path: 'post.richContent.nodes.mapData.mapSettings.lat' },
                        { path: 'post.richContent.nodes.mapData.mapSettings.lng' },
                        { path: 'post.richContent.nodes.pollData.poll.image.duration' },
                        {
                            path: 'post.richContent.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'post.richContent.nodes.pollData.design.poll.background.image.duration',
                        },
                        { path: 'post.richContent.nodes.appEmbedData.image.duration' },
                        { path: 'post.richContent.nodes.videoData.video.duration' },
                        { path: 'post.richContent.nodes.videoData.thumbnail.duration' },
                        { path: 'post.richContent.nodes.audioData.audio.duration' },
                        { path: 'post.richContent.nodes.audioData.coverImage.duration' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getPostBySlug;
}
/**
 * Retrieves a list of published posts.
 *
 *
 * The `listPosts()` function returns a Promise that resolves to a list of up to 100 published posts.
 *
 * Using the `options` parameter, you can filter your list of posts, set the amount of posts to be returned, and sort your list in a specified order.
 *
 * By default, the list is sorted by `firstPublishedDate` in descending order, and the amount of posts returned is 50.
 */
export function listPosts(payload) {
    function __listPosts({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.post',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.PostService.ListPosts',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3PostServiceUrl({
                protoPath: '/v3/posts',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'posts.firstPublishedDate' },
                        { path: 'posts.lastPublishedDate' },
                        { path: 'posts.coverMedia.image.urlExpirationDate' },
                        { path: 'posts.coverMedia.video.thumbnail.urlExpirationDate' },
                        { path: 'posts.heroImage.urlExpirationDate' },
                        { path: 'posts.richContent.metadata.createdTimestamp' },
                        { path: 'posts.richContent.metadata.updatedTimestamp' },
                        { path: 'posts.moderationDetails.submittedDate' },
                        { path: 'posts.moderationDetails.moderationDate' },
                        { path: 'posts.media.wixMedia.image.urlExpirationDate' },
                        { path: 'posts.media.wixMedia.videoV2.urlExpirationDate' },
                        {
                            path: 'posts.media.wixMedia.videoV2.resolutions.urlExpirationDate',
                        },
                        {
                            path: 'posts.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',
                        },
                        {
                            path: 'posts.media.wixMedia.videoV2.posters.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTBytesToSDKBytes,
                    paths: [{ path: 'posts.richContentCompressed' }],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'posts.coverMedia.image.focalPoint.x' },
                        { path: 'posts.coverMedia.image.focalPoint.y' },
                        { path: 'posts.coverMedia.video.thumbnail.focalPoint.x' },
                        { path: 'posts.coverMedia.video.thumbnail.focalPoint.y' },
                        { path: 'posts.heroImage.focalPoint.x' },
                        { path: 'posts.heroImage.focalPoint.y' },
                        { path: 'posts.media.wixMedia.image.focalPoint.x' },
                        { path: 'posts.media.wixMedia.image.focalPoint.y' },
                        {
                            path: 'posts.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',
                        },
                        {
                            path: 'posts.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',
                        },
                        { path: 'posts.media.wixMedia.videoV2.posters.focalPoint.x' },
                        { path: 'posts.media.wixMedia.videoV2.posters.focalPoint.y' },
                        { path: 'posts.metrics.averageRating' },
                        {
                            path: 'posts.richContent.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'posts.richContent.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'posts.richContent.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        {
                            path: 'posts.richContent.nodes.galleryData.options.item.ratio',
                        },
                        { path: 'posts.richContent.nodes.imageData.image.duration' },
                        { path: 'posts.richContent.nodes.mapData.mapSettings.lat' },
                        { path: 'posts.richContent.nodes.mapData.mapSettings.lng' },
                        { path: 'posts.richContent.nodes.pollData.poll.image.duration' },
                        {
                            path: 'posts.richContent.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'posts.richContent.nodes.pollData.design.poll.background.image.duration',
                        },
                        { path: 'posts.richContent.nodes.appEmbedData.image.duration' },
                        { path: 'posts.richContent.nodes.videoData.video.duration' },
                        { path: 'posts.richContent.nodes.videoData.thumbnail.duration' },
                        { path: 'posts.richContent.nodes.audioData.audio.duration' },
                        { path: 'posts.richContent.nodes.audioData.coverImage.duration' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __listPosts;
}
/**
 * Creates a query to retrieve a list of posts.
 *
 *
 * The `queryPosts()` function builds a query to retrieve a list of up to 100 posts, and returns a [`PostsQueryBuilder`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsquerybuilder) object.
 *
 * The returned object contains the query definition which is typically used to run the query using the [`find()`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsquerybuilder/find) function.
 *
 * You can refine the query by chaining `PostsQueryBuilder` functions onto the query. `PostsQueryBuilder` functions enable you to sort, filter, and control the results that `queryPosts()` returns.
 *
 * `queryPosts()` runs with these `PostsQueryBuilder` defaults that can be overridden:
 * + [`limit(50)`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsquerybuilder/limit)
 * + [`descending('firstPublishedDate')`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsquerybuilder/descending)
 *
 * Note that the default limit is `'50'`, but the max limit is `'100'`.
 *
 * To learn how to query posts, refer to the table below.
 *
 * The following `PostsQueryBuilder` functions are supported for the `queryPosts()` function. For a full description of the Posts object, see the object returned for the [`items`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsqueryresult/items) property in [`PostsQueryResult`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsqueryresult).
 */
export function queryPosts(payload) {
    function __queryPosts({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.post',
            method: 'POST',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.PostService.QueryPosts',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3PostServiceUrl({
                protoPath: '/v3/posts/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'posts.firstPublishedDate' },
                        { path: 'posts.lastPublishedDate' },
                        { path: 'posts.coverMedia.image.urlExpirationDate' },
                        { path: 'posts.coverMedia.video.thumbnail.urlExpirationDate' },
                        { path: 'posts.heroImage.urlExpirationDate' },
                        { path: 'posts.richContent.metadata.createdTimestamp' },
                        { path: 'posts.richContent.metadata.updatedTimestamp' },
                        { path: 'posts.moderationDetails.submittedDate' },
                        { path: 'posts.moderationDetails.moderationDate' },
                        { path: 'posts.media.wixMedia.image.urlExpirationDate' },
                        { path: 'posts.media.wixMedia.videoV2.urlExpirationDate' },
                        {
                            path: 'posts.media.wixMedia.videoV2.resolutions.urlExpirationDate',
                        },
                        {
                            path: 'posts.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',
                        },
                        {
                            path: 'posts.media.wixMedia.videoV2.posters.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTBytesToSDKBytes,
                    paths: [{ path: 'posts.richContentCompressed' }],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'posts.coverMedia.image.focalPoint.x' },
                        { path: 'posts.coverMedia.image.focalPoint.y' },
                        { path: 'posts.coverMedia.video.thumbnail.focalPoint.x' },
                        { path: 'posts.coverMedia.video.thumbnail.focalPoint.y' },
                        { path: 'posts.heroImage.focalPoint.x' },
                        { path: 'posts.heroImage.focalPoint.y' },
                        { path: 'posts.media.wixMedia.image.focalPoint.x' },
                        { path: 'posts.media.wixMedia.image.focalPoint.y' },
                        {
                            path: 'posts.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',
                        },
                        {
                            path: 'posts.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',
                        },
                        { path: 'posts.media.wixMedia.videoV2.posters.focalPoint.x' },
                        { path: 'posts.media.wixMedia.videoV2.posters.focalPoint.y' },
                        { path: 'posts.metrics.averageRating' },
                        {
                            path: 'posts.richContent.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'posts.richContent.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'posts.richContent.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        {
                            path: 'posts.richContent.nodes.galleryData.options.item.ratio',
                        },
                        { path: 'posts.richContent.nodes.imageData.image.duration' },
                        { path: 'posts.richContent.nodes.mapData.mapSettings.lat' },
                        { path: 'posts.richContent.nodes.mapData.mapSettings.lng' },
                        { path: 'posts.richContent.nodes.pollData.poll.image.duration' },
                        {
                            path: 'posts.richContent.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'posts.richContent.nodes.pollData.design.poll.background.image.duration',
                        },
                        { path: 'posts.richContent.nodes.appEmbedData.image.duration' },
                        { path: 'posts.richContent.nodes.videoData.video.duration' },
                        { path: 'posts.richContent.nodes.videoData.thumbnail.duration' },
                        { path: 'posts.richContent.nodes.audioData.audio.duration' },
                        { path: 'posts.richContent.nodes.audioData.coverImage.duration' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __queryPosts;
}
/**
 * Gets a specified post's metrics.
 *
 *
 * The `getPostMetrics()` function returns a Promise that resolves to the specified post's metrics.
 *
 * A post's metrics include the comments, likes, and views the post receives.
 */
export function getPostMetrics(payload) {
    function __getPostMetrics({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.post',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.v3.PostService.GetPostMetrics',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3PostServiceUrl({
                protoPath: '/v3/posts/{postId}/metrics',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [{ path: 'metrics.averageRating' }],
                },
            ]),
        };
        return metadata;
    }
    return __getPostMetrics;
}
/**
 * Retrieves the number of published posts per month within a specified time range.
 *
 *
 * The `queryPostCountStats()` function returns a Promise that resolves to the number of posts per month within the specified time range.
 *
 * You can set the time range using the `rangeStart` and `months` properties. The time range always starts on the 1st day of the month set in `rangeStart` and includes the number of `months` following `rangeStart`. For example, if `rangeStart` is set to `'2022-03-13'` and `months` is set to `4`, the time range will be from `'2022-03-01'` until `'2022-06-30'`. The time range ends on the last day of the month.
 *
 * >**Note:** If there are no published posts in a specific month, that month is not included in the response. For example, let's say a blog has `0` posts dated in February 2022. If `rangeStart` is set to `'2022-01-01'` and `months` is set to `3`, the response includes `postCount` values for January and March, but not February.
 */
export function queryPostCountStats(payload) {
    function __queryPostCountStats({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'rangeStart' }, { path: 'rangeEnd' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.blog.v3.post',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.BlogStatsService.QueryPostCountStats',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogBlogStatsServiceUrl({
                protoPath: '/v2/stats/post/count',
                data: serializedData,
                host,
            }),
            params: toURLSearchParams(serializedData),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'stats.periodStart' }],
                },
            ]),
        };
        return metadata;
    }
    return __queryPostCountStats;
}
/**
 * Gets the total amount of published posts on the blog.
 *
 *
 * The `getTotalPosts()` function returns a Promise that resolves to the total amount of published posts on your blog's site.
 *
 *
 * You can use the `language` option to filter posts for a specified language.
 */
export function getTotalPosts(payload) {
    function __getTotalPosts({ host }) {
        const metadata = {
            entityFqdn: 'wix.blog.v3.post',
            method: 'GET',
            methodFqn: 'com.wixpress.npm.communities.platformized.blog.BlogStatsService.GetTotalPosts',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressNpmCommunitiesPlatformizedBlogBlogStatsServiceUrl({
                protoPath: '/v2/stats/posts/total',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __getTotalPosts;
}
//# sourceMappingURL=blog-v3-post-posts.http.js.map