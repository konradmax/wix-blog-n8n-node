import { EventDefinition, HttpClient } from '@wix/sdk-types';
import { GetPostBySlugOptions, GetPostBySlugResponse, GetPostBySlugResponseNonNullableFields, GetPostMetricsResponse, GetPostMetricsResponseNonNullableFields, GetPostOptions, GetPostResponse, GetPostResponseNonNullableFields, GetTotalPostsOptions, GetTotalPostsResponse, GetTotalPostsResponseNonNullableFields, ListPostsOptions, ListPostsResponse, ListPostsResponseNonNullableFields, PostCreatedEnvelope, PostDeletedEnvelope, PostLikedEnvelope, PostUnlikedEnvelope, PostUpdatedEnvelope, PostsQueryBuilder, QueryPostCountStatsOptions, QueryPostCountStatsResponse, QueryPostCountStatsResponseNonNullableFields, QueryPostsOptions } from './blog-v3-post-posts.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function getPost(httpClient: HttpClient): GetPostSignature;
interface GetPostSignature {
    /**
     * Gets a post by the specified ID.
     *
     *
     * The `getPost()` function returns a Promise that resolves to a post whose ID matches the given ID.
     *
     * @param - Post ID.
     * @param - Options specifying which fields to return.
     * @returns Fulfilled - The requested post.
     */
    (postId: string, options?: GetPostOptions | undefined): Promise<GetPostResponse & GetPostResponseNonNullableFields>;
}
export declare function getPostBySlug(httpClient: HttpClient): GetPostBySlugSignature;
interface GetPostBySlugSignature {
    /**
     * Gets a post by the provided slug.
     *
     *
     * The `getPostBySlug()` function returns a Promise that resolves to a post whose slug matches the given slug.
     *
     * The `slug` is the end of a post's URL that refers to a specific post. For example, if a post's URL is `https:/example.com/blog/post/my-post-slug`, the slug is `my-post-slug`. The slug is case-sensitive, and is generally derived from the post title, unless specified otherwise.
     * @param - Options specifying which fields to return.
     * @param - Slug of the post to retrieve.
     *
     * The end of a post's URL, for example, `https:/example.com/blog/post/my-post-slug`. Case sensitive and generally based on the post title if not specified.
     * @returns Fulfilled - The requested post.
     */
    (slug: string, options?: GetPostBySlugOptions | undefined): Promise<GetPostBySlugResponse & GetPostBySlugResponseNonNullableFields>;
}
export declare function listPosts(httpClient: HttpClient): ListPostsSignature;
interface ListPostsSignature {
    /**
     * Retrieves a list of published posts.
     *
     *
     * The `listPosts()` function returns a Promise that resolves to a list of up to 100 published posts.
     *
     * Using the `options` parameter, you can filter your list of posts, set the amount of posts to be returned, and sort your list in a specified order.
     *
     * By default, the list is sorted by `firstPublishedDate` in descending order, and the amount of posts returned is 50.
     * @param - Sort, filter, and paging options.
     * @returns Fulfilled - List of retrieved posts.
     */
    (options?: ListPostsOptions | undefined): Promise<ListPostsResponse & ListPostsResponseNonNullableFields>;
}
export declare function queryPosts(httpClient: HttpClient): QueryPostsSignature;
interface QueryPostsSignature {
    /**
     * Creates a query to retrieve a list of posts.
     *
     *
     * The `queryPosts()` function builds a query to retrieve a list of up to 100 posts, and returns a [`PostsQueryBuilder`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsquerybuilder) object.
     *
     * The returned object contains the query definition which is typically used to run the query using the [`find()`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsquerybuilder/find) function.
     *
     * You can refine the query by chaining `PostsQueryBuilder` functions onto the query. `PostsQueryBuilder` functions enable you to sort, filter, and control the results that `queryPosts()` returns.
     *
     * `queryPosts()` runs with these `PostsQueryBuilder` defaults that can be overridden:
     * + [`limit(50)`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsquerybuilder/limit)
     * + [`descending('firstPublishedDate')`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsquerybuilder/descending)
     *
     * Note that the default limit is `'50'`, but the max limit is `'100'`.
     *
     * To learn how to query posts, refer to the table below.
     *
     * The following `PostsQueryBuilder` functions are supported for the `queryPosts()` function. For a full description of the Posts object, see the object returned for the [`items`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsqueryresult/items) property in [`PostsQueryResult`](https://www.wix.com/velo/reference/wix-blog-backend/posts/postsqueryresult).
     * @param - Options specifying which fields to return.
     */
    (options?: QueryPostsOptions | undefined): PostsQueryBuilder;
}
export declare function getPostMetrics(httpClient: HttpClient): GetPostMetricsSignature;
interface GetPostMetricsSignature {
    /**
     * Gets a specified post's metrics.
     *
     *
     * The `getPostMetrics()` function returns a Promise that resolves to the specified post's metrics.
     *
     * A post's metrics include the comments, likes, and views the post receives.
     * @param - Post ID.
     * @returns Fulfilled - Post metrics.
     */
    (postId: string): Promise<GetPostMetricsResponse & GetPostMetricsResponseNonNullableFields>;
}
export declare function queryPostCountStats(httpClient: HttpClient): QueryPostCountStatsSignature;
interface QueryPostCountStatsSignature {
    /**
     * Retrieves the number of published posts per month within a specified time range.
     *
     *
     * The `queryPostCountStats()` function returns a Promise that resolves to the number of posts per month within the specified time range.
     *
     * You can set the time range using the `rangeStart` and `months` properties. The time range always starts on the 1st day of the month set in `rangeStart` and includes the number of `months` following `rangeStart`. For example, if `rangeStart` is set to `'2022-03-13'` and `months` is set to `4`, the time range will be from `'2022-03-01'` until `'2022-06-30'`. The time range ends on the last day of the month.
     *
     * >**Note:** If there are no published posts in a specific month, that month is not included in the response. For example, let's say a blog has `0` posts dated in February 2022. If `rangeStart` is set to `'2022-01-01'` and `months` is set to `3`, the response includes `postCount` values for January and March, but not February.
     * @param - Options specifying time frame, sort, and filter.
     * @returns Fulfilled - Post count stats.
     */
    (options?: QueryPostCountStatsOptions | undefined): Promise<QueryPostCountStatsResponse & QueryPostCountStatsResponseNonNullableFields>;
}
export declare function getTotalPosts(httpClient: HttpClient): GetTotalPostsSignature;
interface GetTotalPostsSignature {
    /**
     * Gets the total amount of published posts on the blog.
     *
     *
     * The `getTotalPosts()` function returns a Promise that resolves to the total amount of published posts on your blog's site.
     *
     *
     * You can use the `language` option to filter posts for a specified language.
     * @param - Language Options.
     * @returns Fulfilled - Total number of posts.
     */
    (options?: GetTotalPostsOptions | undefined): Promise<GetTotalPostsResponse & GetTotalPostsResponseNonNullableFields>;
}
export declare const onPostCreated: EventDefinition<PostCreatedEnvelope, "wix.blog.v3.post_created">;
export declare const onPostDeleted: EventDefinition<PostDeletedEnvelope, "wix.blog.v3.post_deleted">;
export declare const onPostLiked: EventDefinition<PostLikedEnvelope, "wix.blog.v3.post_liked">;
export declare const onPostUnliked: EventDefinition<PostUnlikedEnvelope, "wix.blog.v3.post_unliked">;
export declare const onPostUpdated: EventDefinition<PostUpdatedEnvelope, "wix.blog.v3.post_updated">;
export { ActionEvent, Alignment, AnchorData, AppEmbedData, AppEmbedDataAppDataOneOf, AppType, AudioData, Background, BackgroundBackgroundOneOf, BackgroundType, BaseEventMetadata, BlockquoteData, BlogPaging, BookingData, Border, BorderColors, BulkGetPostMetricsRequest, BulkGetPostMetricsResponse, BulkGetPostReactionsRequest, BulkGetPostReactionsResponse, BulletedListData, ButtonData, CaptionData, Category, CategoryTranslation, CellStyle, CodeBlockData, CollapsibleListData, ColorData, Colors, ConvertDraftJsToRichContentRequest, ConvertDraftJsToRichContentResponse, ConvertRichContentToDraftJsRequest, ConvertRichContentToDraftJsResponse, CoverMedia, CoverMediaMediaOneOf, CreateDraftPostFromTemplateRequest, CreateDraftPostFromTemplateResponse, Crop, CursorPaging, Cursors, Decoration, DecorationDataOneOf, DecorationType, Design, Dimensions, Direction, DividerData, DocumentStyle, DomainEvent, DomainEventBodyOneOf, DraftPost, DraftPostTranslation, EmbedData, EmbedMedia, EmbedThumbnail, EmbedVideo, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, EventData, EventMetadata, Field, FileData, FileSource, FileSourceDataOneOf, FocalPoint, FontSizeData, FontType, GIF, GIFData, GIFType, GalleryData, GalleryOptions, GetPostBySlugOptions, GetPostBySlugRequest, GetPostBySlugResponse, GetPostBySlugResponseNonNullableFields, GetPostMetricsRequest, GetPostMetricsResponse, GetPostMetricsResponseNonNullableFields, GetPostOptions, GetPostRequest, GetPostResponse, GetPostResponseNonNullableFields, GetPostTemplatesSort, GetPostsSort, GetTemplateRequest, GetTemplateResponse, GetTotalLikesPerMemberRequest, GetTotalLikesPerMemberResponse, GetTotalPostsOptions, GetTotalPostsRequest, GetTotalPostsResponse, GetTotalPostsResponseNonNullableFields, GetTotalPublicationsRequest, GetTotalPublicationsResponse, Gradient, HTMLData, HTMLDataDataOneOf, HeadingData, Height, IdentificationData, IdentificationDataIdOneOf, Image, ImageData, InitialExpandedItems, InitialPostsCopied, Item, ItemDataOneOf, ItemStyle, Keyword, Layout, LayoutCellData, LayoutType, LikePostRequest, LikePostResponse, LineStyle, Link, LinkData, LinkDataOneOf, LinkPreviewData, ListDemoPostsRequest, ListDemoPostsResponse, ListPostsArchiveRequest, ListPostsArchiveResponse, ListPostsOptions, ListPostsRequest, ListPostsResponse, ListPostsResponseNonNullableFields, ListTemplatesRequest, ListTemplatesResponse, ListValue, MapData, MapSettings, MapType, Media, MediaMediaOneOf, MentionData, MessageEnvelope, MetaData, Metadata, Metrics, ModerationDetails, ModerationStatusStatus, Node, NodeDataOneOf, NodeStyle, NodeType, NullValue, Oembed, Option, OptionDesign, OptionLayout, Order, OrderedListData, Orientation, Origin, PDFSettings, Paging, PagingMetadataV2, ParagraphData, PeriodPostCount, PeriodPublicationsCount, Permissions, PinPostRequest, PinPostResponse, PlatformQuery, PlatformQueryPagingMethodOneOf, PlaybackOptions, PluginContainerData, PluginContainerDataAlignment, PluginContainerDataWidth, PluginContainerDataWidthDataOneOf, Poll, PollData, PollDataLayout, PollDesign, PollLayout, PollLayoutDirection, PollLayoutType, PollSettings, Post, PostCategoriesUpdated, PostCountInfo, PostCountersUpdated, PostCountersUpdatedInitiatorOneOf, PostCreatedEnvelope, PostDeletedEnvelope, PostFieldField, PostLiked, PostLikedEnvelope, PostLikedInitiatorOneOf, PostOwnerChanged, PostTagsUpdated, PostTranslation, PostUnliked, PostUnlikedEnvelope, PostUnlikedInitiatorOneOf, PostUpdatedEnvelope, PostsQueryBuilder, PostsQueryResult, QueryPostCountStatsOptions, QueryPostCountStatsRequest, QueryPostCountStatsResponse, QueryPostCountStatsResponseNonNullableFields, QueryPostsOptions, QueryPostsRequest, QueryPostsResponse, QueryPostsResponseNonNullableFields, QueryPublicationsCountStatsRequest, QueryPublicationsCountStatsRequestOrder, QueryPublicationsCountStatsResponse, Reactions, Rel, RestoreInfo, RichContent, ScheduledPostPublished, SeoSchema, Settings, SortOrder, Sorting, Source, Spoiler, SpoilerData, Status, Styles, TableCellData, TableData, Tag, Target, TextAlignment, TextData, TextNodeStyle, TextStyle, Thumbnails, ThumbnailsAlignment, Type, UnlikePostRequest, UnlikePostResponse, UnpinPostRequest, UnpinPostResponse, V1Media, VerticalAlignment, Video, VideoData, VideoResolution, ViewMode, ViewPostRequest, ViewPostResponse, ViewRole, VoteRole, WebhookIdentityType, Width, WidthType, WixMedia, } from './blog-v3-post-posts.universal.js';
