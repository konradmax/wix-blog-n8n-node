import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';
import { transformRESTBytesToSDKBytes } from '@wix/sdk-runtime/transformations/bytes';
import { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';
import { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';
import { transformRESTPageURLToSDKPageURL } from '@wix/sdk-runtime/transformations/page-url';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { transformRESTVideoToSDKVideo } from '@wix/sdk-runtime/transformations/video';
import { transformRESTVideoV2ToSDKVideoV2 } from '@wix/sdk-runtime/transformations/video-v2';
import { EventDefinition } from '@wix/sdk-types';
import { getPost as universalGetPost, getPostBySlug as universalGetPostBySlug, getPostMetrics as universalGetPostMetrics, getTotalPosts as universalGetTotalPosts, listPosts as universalListPosts, queryPostCountStats as universalQueryPostCountStats, queryPosts as universalQueryPosts, } from './blog-v3-post-posts.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/blog' };
export function getPost(httpClient) {
    return (postId, options) => universalGetPost(postId, options, 
    // @ts-ignore
    { httpClient });
}
export function getPostBySlug(httpClient) {
    return (slug, options) => universalGetPostBySlug(slug, options, 
    // @ts-ignore
    { httpClient });
}
export function listPosts(httpClient) {
    return (options) => universalListPosts(options, 
    // @ts-ignore
    { httpClient });
}
export function queryPosts(httpClient) {
    return (options) => universalQueryPosts(options, 
    // @ts-ignore
    { httpClient });
}
export function getPostMetrics(httpClient) {
    return (postId) => universalGetPostMetrics(postId, 
    // @ts-ignore
    { httpClient });
}
export function queryPostCountStats(httpClient) {
    return (options) => universalQueryPostCountStats(options, 
    // @ts-ignore
    { httpClient });
}
export function getTotalPosts(httpClient) {
    return (options) => universalGetTotalPosts(options, 
    // @ts-ignore
    { httpClient });
}
export const onPostCreated = EventDefinition('wix.blog.v3.post_created', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.firstPublishedDate' },
            { path: 'entity.lastPublishedDate' },
            { path: 'entity.richContent.metadata.createdTimestamp' },
            { path: 'entity.richContent.metadata.updatedTimestamp' },
            { path: 'entity.moderationDetails.submittedDate' },
            { path: 'entity.moderationDetails.moderationDate' },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTPageURLToSDKPageURL,
        paths: [{ path: 'entity.url' }, { path: 'entity.translations.url' }],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [
            { path: 'entity.heroImage' },
            { path: 'entity.coverMedia.image' },
            { path: 'entity.media.wixMedia.image' },
        ],
    },
    {
        transformFn: transformRESTBytesToSDKBytes,
        paths: [{ path: 'entity.richContentCompressed' }],
    },
    {
        transformFn: transformRESTVideoToSDKVideo,
        paths: [{ path: 'entity.coverMedia.video' }],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [
            { path: 'entity.metrics.averageRating' },
            {
                path: 'entity.richContent.nodes.galleryData.items.image.media.duration',
            },
            {
                path: 'entity.richContent.nodes.galleryData.items.video.media.duration',
            },
            {
                path: 'entity.richContent.nodes.galleryData.items.video.thumbnail.duration',
            },
            { path: 'entity.richContent.nodes.galleryData.options.item.ratio' },
            { path: 'entity.richContent.nodes.imageData.image.duration' },
            { path: 'entity.richContent.nodes.mapData.mapSettings.lat' },
            { path: 'entity.richContent.nodes.mapData.mapSettings.lng' },
            { path: 'entity.richContent.nodes.pollData.poll.image.duration' },
            {
                path: 'entity.richContent.nodes.pollData.poll.options.image.duration',
            },
            {
                path: 'entity.richContent.nodes.pollData.design.poll.background.image.duration',
            },
            { path: 'entity.richContent.nodes.appEmbedData.image.duration' },
            { path: 'entity.richContent.nodes.videoData.video.duration' },
            { path: 'entity.richContent.nodes.videoData.thumbnail.duration' },
            { path: 'entity.richContent.nodes.audioData.audio.duration' },
            { path: 'entity.richContent.nodes.audioData.coverImage.duration' },
        ],
    },
    {
        transformFn: transformRESTVideoV2ToSDKVideoV2,
        paths: [{ path: 'entity.media.wixMedia.videoV2' }],
    },
]), ['entity.rich_content']))();
export const onPostDeleted = EventDefinition('wix.blog.v3.post_deleted', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.firstPublishedDate' },
            { path: 'entity.lastPublishedDate' },
            { path: 'entity.richContent.metadata.createdTimestamp' },
            { path: 'entity.richContent.metadata.updatedTimestamp' },
            { path: 'entity.moderationDetails.submittedDate' },
            { path: 'entity.moderationDetails.moderationDate' },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTPageURLToSDKPageURL,
        paths: [{ path: 'entity.url' }, { path: 'entity.translations.url' }],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [
            { path: 'entity.heroImage' },
            { path: 'entity.coverMedia.image' },
            { path: 'entity.media.wixMedia.image' },
        ],
    },
    {
        transformFn: transformRESTBytesToSDKBytes,
        paths: [{ path: 'entity.richContentCompressed' }],
    },
    {
        transformFn: transformRESTVideoToSDKVideo,
        paths: [{ path: 'entity.coverMedia.video' }],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [
            { path: 'entity.metrics.averageRating' },
            {
                path: 'entity.richContent.nodes.galleryData.items.image.media.duration',
            },
            {
                path: 'entity.richContent.nodes.galleryData.items.video.media.duration',
            },
            {
                path: 'entity.richContent.nodes.galleryData.items.video.thumbnail.duration',
            },
            { path: 'entity.richContent.nodes.galleryData.options.item.ratio' },
            { path: 'entity.richContent.nodes.imageData.image.duration' },
            { path: 'entity.richContent.nodes.mapData.mapSettings.lat' },
            { path: 'entity.richContent.nodes.mapData.mapSettings.lng' },
            { path: 'entity.richContent.nodes.pollData.poll.image.duration' },
            {
                path: 'entity.richContent.nodes.pollData.poll.options.image.duration',
            },
            {
                path: 'entity.richContent.nodes.pollData.design.poll.background.image.duration',
            },
            { path: 'entity.richContent.nodes.appEmbedData.image.duration' },
            { path: 'entity.richContent.nodes.videoData.video.duration' },
            { path: 'entity.richContent.nodes.videoData.thumbnail.duration' },
            { path: 'entity.richContent.nodes.audioData.audio.duration' },
            { path: 'entity.richContent.nodes.audioData.coverImage.duration' },
        ],
    },
    {
        transformFn: transformRESTVideoV2ToSDKVideoV2,
        paths: [{ path: 'entity.media.wixMedia.videoV2' }],
    },
]), ['entity.rich_content']))();
export const onPostLiked = EventDefinition('wix.blog.v3.post_liked', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [{ path: 'metadata.eventTime' }],
    },
]), ['entity.rich_content']))();
export const onPostUnliked = EventDefinition('wix.blog.v3.post_unliked', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [{ path: 'metadata.eventTime' }],
    },
]), ['entity.rich_content']))();
export const onPostUpdated = EventDefinition('wix.blog.v3.post_updated', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.firstPublishedDate' },
            { path: 'entity.lastPublishedDate' },
            { path: 'entity.richContent.metadata.createdTimestamp' },
            { path: 'entity.richContent.metadata.updatedTimestamp' },
            { path: 'entity.moderationDetails.submittedDate' },
            { path: 'entity.moderationDetails.moderationDate' },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTPageURLToSDKPageURL,
        paths: [{ path: 'entity.url' }, { path: 'entity.translations.url' }],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [
            { path: 'entity.heroImage' },
            { path: 'entity.coverMedia.image' },
            { path: 'entity.media.wixMedia.image' },
        ],
    },
    {
        transformFn: transformRESTBytesToSDKBytes,
        paths: [{ path: 'entity.richContentCompressed' }],
    },
    {
        transformFn: transformRESTVideoToSDKVideo,
        paths: [{ path: 'entity.coverMedia.video' }],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [
            { path: 'entity.metrics.averageRating' },
            {
                path: 'entity.richContent.nodes.galleryData.items.image.media.duration',
            },
            {
                path: 'entity.richContent.nodes.galleryData.items.video.media.duration',
            },
            {
                path: 'entity.richContent.nodes.galleryData.items.video.thumbnail.duration',
            },
            { path: 'entity.richContent.nodes.galleryData.options.item.ratio' },
            { path: 'entity.richContent.nodes.imageData.image.duration' },
            { path: 'entity.richContent.nodes.mapData.mapSettings.lat' },
            { path: 'entity.richContent.nodes.mapData.mapSettings.lng' },
            { path: 'entity.richContent.nodes.pollData.poll.image.duration' },
            {
                path: 'entity.richContent.nodes.pollData.poll.options.image.duration',
            },
            {
                path: 'entity.richContent.nodes.pollData.design.poll.background.image.duration',
            },
            { path: 'entity.richContent.nodes.appEmbedData.image.duration' },
            { path: 'entity.richContent.nodes.videoData.video.duration' },
            { path: 'entity.richContent.nodes.videoData.thumbnail.duration' },
            { path: 'entity.richContent.nodes.audioData.audio.duration' },
            { path: 'entity.richContent.nodes.audioData.coverImage.duration' },
        ],
    },
    {
        transformFn: transformRESTVideoV2ToSDKVideoV2,
        paths: [{ path: 'entity.media.wixMedia.videoV2' }],
    },
]), ['entity.rich_content']))();
export { Alignment, AppType, BackgroundType, Crop, DecorationType, Direction, Field, FontType, GIFType, GetPostTemplatesSort, GetPostsSort, InitialExpandedItems, LayoutType, LineStyle, MapType, ModerationStatusStatus, NodeType, NullValue, Order, Orientation, Origin, PluginContainerDataAlignment, PollLayoutDirection, PollLayoutType, PostFieldField, QueryPublicationsCountStatsRequestOrder, SortOrder, Source, Status, Target, TextAlignment, ThumbnailsAlignment, Type, VerticalAlignment, ViewMode, ViewRole, VoteRole, WebhookIdentityType, Width, WidthType, } from './blog-v3-post-posts.universal.js';
//# sourceMappingURL=blog-v3-post-posts.public.js.map