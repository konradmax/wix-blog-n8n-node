import { HttpClient } from '@wix/sdk-types';
import { GetImportStatusResponse, GetImportStatusResponseNonNullableFields, GetNotImportedPostsResponse, GetNotImportedPostsResponseNonNullableFields, StartImportOptions, SubmitUrlForImportOptions, ValidateUrlForImportResponse } from './blog-v1-wordpress-import-blog-importer.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function startImport(httpClient: HttpClient): StartImportSignature;
interface StartImportSignature {
    /**
     * Starts wordpress import process.
     */
    (options?: StartImportOptions | undefined): Promise<void>;
}
export declare function submitUrlForImport(httpClient: HttpClient): SubmitUrlForImportSignature;
interface SubmitUrlForImportSignature {
    /**
     * Submits wordpress import process from URL.
     * It will prepare wordpress data for import from the given URL.
     * Use "GetImportStatus" to get the status of the import process.
     * Once the import status becomes READY_TO_IMPORT, the import process can be started by invoking "StartImport".
     * @param - Url to wordpress xml file.
     */
    (url: string, options?: SubmitUrlForImportOptions | undefined): Promise<void>;
}
export declare function validateUrlForImport(httpClient: HttpClient): ValidateUrlForImportSignature;
interface ValidateUrlForImportSignature {
    /** @param - Url for wordpress site. */
    (url: string | null): Promise<ValidateUrlForImportResponse>;
}
export declare function deleteNotImported(httpClient: HttpClient): DeleteNotImportedSignature;
interface DeleteNotImportedSignature {
    /** */
    (): Promise<void>;
}
export declare function getImportStatus(httpClient: HttpClient): GetImportStatusSignature;
interface GetImportStatusSignature {
    /**
     * Gets the status of the import process.
     */
    (): Promise<GetImportStatusResponse & GetImportStatusResponseNonNullableFields>;
}
export declare function getNotImportedPosts(httpClient: HttpClient): GetNotImportedPostsSignature;
interface GetNotImportedPostsSignature {
    /**
     * Gets the posts that were not yet imported either because of an error or because import is still in progress.
     */
    (): Promise<GetNotImportedPostsResponse & GetNotImportedPostsResponseNonNullableFields>;
}
export { DeleteNotImportedRequest, DeleteNotImportedResponse, GetImportStatusRequest, GetImportStatusResponse, GetImportStatusResponseNonNullableFields, GetNotImportedPostsRequest, GetNotImportedPostsResponse, GetNotImportedPostsResponseNonNullableFields, ImportStatus, Post, StartImportOptions, StartImportRequest, StartImportResponse, Status, SubmitUrlForImportOptions, SubmitUrlForImportRequest, SubmitUrlForImportResponse, ValidateUrlForImportRequest, ValidateUrlForImportResponse, } from './blog-v1-wordpress-import-blog-importer.universal.js';
